The board gets detected by cv2.findChessboardCorners only when there are no occlusions.
I should find squares myself, as in demo2.py.
RANSAC should find outliers.
On each RANSAC iteration, a subset of points will be chosen.
A rotation vector will be chosen and improved using least-squares minimization, as in solvePnP.
The quad contours will be projected onto an idealized chessboard.
Distance will be calculated to the nearest square of the correct color.

Once the board has been located, MSER can track it.

subtractor5.py has a good, clean image in "stablec" or "stablecgray".
That image should be compared with speculated positions


